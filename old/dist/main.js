/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/api.js":
/*!********************!*\
  !*** ./src/api.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst API = {\n    makeRequest: (url, options = {}) => new Promise((resolve, reject) => {\n        GM_xmlhttpRequest({\n            method: options.method || 'GET',\n            url,\n            headers: options.headers || {},\n            data: options.data,\n            onload: (response) => {\n                try {\n                    const data = JSON.parse(response.responseText);\n                    resolve(data);\n                } catch (e) {\n                    resolve(response.responseText);\n                }\n            },\n            onerror: reject\n        });\n    }),\n\n    getEvents: async (startDate, endDate, config) => {\n        const params = {\n            access_token: config.ACCESS_TOKEN,\n            target_type: 'merge_request',\n            per_page: 1000,\n            after: startDate,\n            before: endDate\n        };\n        const url = `${config.GITLAB_URL}/events?${Object.entries(params).map(([key, value]) => `${key}=${value}`).join('&')}`;\n\n        try {\n            const events = await API.makeRequest(url);\n            return Array.isArray(events) ? events : [];\n        } catch (error) {\n            console.error('获取事件失败:', error);\n            throw error;\n        }\n    },\n\n    generateReport: async (events, additionalPrompt, config) => {\n        const commits = events.map(event => event.target_title).join(';');\n        const fullPrompt = config.SYSTEM_PROMPT + (additionalPrompt ? ` 附加要求: ${additionalPrompt}` : '');\n\n        const data = JSON.stringify({\n            model: config.DEEPSEEK_MODEL,\n            max_tokens: config.DEEPSEEK_MAX_TOKENS,\n            messages: [\n                {\n                    role: 'system',\n                    content: fullPrompt\n                },\n                {\n                    role: 'user',\n                    content: commits\n                }\n            ]\n        });\n\n        try {\n            const response = await API.makeRequest(config.DEEPSEEK_BASE_URL, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${config.DEEPSEEK_API_KEY}`\n                },\n                data\n            });\n\n            if (response.choices && response.choices[0] && response.choices[0].message) {\n                return {\n                    content: response.choices[0].message.content,\n                    usage: response.usage\n                };\n            }\n\n            throw new Error('生成周报失败');\n        } catch (error) {\n            console.error('DeepSeek API 调用失败:', error);\n            throw error;\n        }\n    },\n\n    fetchUserBalance: async (config) => {\n        if (!config.DEEPSEEK_API_KEY) {\n            return null;\n        }\n\n        try {\n            const response = await API.makeRequest('https://api.deepseek.com/user/balance', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${config.DEEPSEEK_API_KEY}`\n                }\n            });\n\n            if (response && response.balance_infos && response.balance_infos.length > 0) {\n                return response.balance_infos[0];\n            }\n\n            return null;\n        } catch (error) {\n            console.error('获取用户余额失败:', error);\n            return null;\n        }\n    },\n\n    fetchAvailableModels: async (config) => {\n        if (!config.DEEPSEEK_API_KEY) {\n            return [{ id: 'deepseek-chat' }, { id: 'deepseek-reasoner' }];\n        }\n\n        try {\n            const response = await API.makeRequest('https://api.deepseek.com/models', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${config.DEEPSEEK_API_KEY}`\n                }\n            });\n\n            if (response && response.data) {\n                return response.data;\n            }\n\n            return [{ id: 'deepseek-chat' }, { id: 'deepseek-reasoner' }];\n        } catch (error) {\n            console.error('获取模型列表失败:', error);\n            return [{ id: 'deepseek-chat' }, { id: 'deepseek-reasoner' }];\n        }\n    }\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (API);\n\n\n//# sourceURL=webpack://tm/./src/api.js?");

/***/ }),

/***/ "./src/config.js":
/*!***********************!*\
  !*** ./src/config.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst CONFIG = {\n    VERSION: '1.3.0',\n\n    DEFAULT: {\n        ACCESS_TOKEN: '',\n        GITLAB_URL: 'https://www.lejuhub.com/api/v4',\n        DEEPSEEK_MODEL: 'deepseek-chat',\n        DEEPSEEK_MAX_TOKENS: 1000,\n        DEEPSEEK_API_KEY: '',\n        DEEPSEEK_BASE_URL: 'https://api.deepseek.com/v1/chat/completions',\n        SYSTEM_PROMPT: `你是一名前端工程师, 现在需要提交一份100字左右的周报, 请根据Git提交记录生成一份简洁的周报;\n请使用中文回答; \n请使用简单文本, 不要使用markdown格式;\n减少笼统的描述;\n不需要下周计划;`,\n        DEFAULT_ADDITIONAL_PROMPT: '请重点突出具体完成的功能和修复的问题',\n        THEME_MODE: 'system'\n    },\n\n    THEMES: {\n        light: {\n            background: '#ffffff',\n            cardBg: '#f8f9fa',\n            border: '#e1e5e9',\n            borderLight: '#f0f0f0',\n            text: '#1d1d1f',\n            textSecondary: '#6e6e73',\n            textMuted: '#8e8e93',\n            primary: '#007aff',\n            success: '#30d158',\n            warning: '#ff9500',\n            error: '#ff3b30',\n            buttonBg: '#f2f2f7',\n            hoverBg: '#f8f8f8',\n            shadow: '0 1px 3px rgba(0,0,0,0.08)',\n            shadowLarge: '0 4px 20px rgba(0,0,0,0.08)'\n        },\n        dark: {\n            background: '#1c1c1e',\n            cardBg: '#2c2c2e',\n            border: '#38383a',\n            borderLight: '#48484a',\n            text: '#ffffff',\n            textSecondary: '#aeaeb2',\n            textMuted: '#8e8e93',\n            primary: '#0a84ff',\n            success: '#32d74b',\n            warning: '#ff9f0a',\n            error: '#ff453a',\n            buttonBg: '#3a3a3c',\n            hoverBg: '#48484a',\n            shadow: '0 1px 3px rgba(0,0,0,0.3)',\n            shadowLarge: '0 4px 20px rgba(0,0,0,0.25)'\n        }\n    },\n\n    STORAGE_KEY: 'gitlab-weekly-report-config',\n\n    get: () => {\n        const savedConfig = localStorage.getItem(CONFIG.STORAGE_KEY);\n        if (savedConfig) {\n            try {\n                return { ...CONFIG.DEFAULT, ...JSON.parse(savedConfig) };\n            } catch (e) {\n                console.error('配置解析失败，使用默认配置:', e);\n                return CONFIG.DEFAULT;\n            }\n        }\n        return CONFIG.DEFAULT;\n    },\n\n    save: (config) => {\n        localStorage.setItem(CONFIG.STORAGE_KEY, JSON.stringify(config));\n    },\n\n    reset: () => {\n        localStorage.removeItem(CONFIG.STORAGE_KEY);\n        return CONFIG.DEFAULT;\n    }\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CONFIG);\n\n\n//# sourceURL=webpack://tm/./src/config.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ \"./src/config.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api.js */ \"./src/api.js\");\n/* harmony import */ var _ui_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui.js */ \"./src/ui.js\");\n/* harmony import */ var _ui_panels_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui-panels.js */ \"./src/ui-panels.js\");\n\n\n\n\n\n\n// 将UI添加到window对象以便其他部分访问\nwindow.UI = _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n\nconst Main = {\n    updateButtons: () => {\n        const generateBtn = document.getElementById('generateReport');\n        const exportBtn = document.getElementById('exportData');\n        const dataCount = document.getElementById('dataCount');\n\n        const config = _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get();\n        const configErrors = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].validateConfig(config);\n        const selectedCount = Main.getSelectedEventsCount();\n\n        if (_ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData.length === 0) {\n            generateBtn.disabled = true;\n            exportBtn.disabled = true;\n            generateBtn.style.background = '#d9d9d9';\n            exportBtn.style.background = '#d9d9d9';\n            generateBtn.style.cursor = 'not-allowed';\n            exportBtn.style.cursor = 'not-allowed';\n            dataCount.textContent = '暂无数据';\n            dataCount.style.color = '#ff4d4f';\n        } else if (configErrors.length > 0) {\n            generateBtn.disabled = true;\n            exportBtn.disabled = false;\n            generateBtn.style.background = '#d9d9d9';\n            exportBtn.style.background = '#13c2c2';\n            generateBtn.style.cursor = 'not-allowed';\n            exportBtn.style.cursor = 'pointer';\n            dataCount.textContent = `找到 ${_ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData.length} 条记录，但配置不完整：${configErrors.join('、')}`;\n            dataCount.style.color = '#fa8c16';\n        } else {\n            generateBtn.disabled = false;\n            exportBtn.disabled = false;\n            generateBtn.style.background = '#722ed1';\n            exportBtn.style.background = '#13c2c2';\n            generateBtn.style.cursor = 'pointer';\n            exportBtn.style.cursor = 'pointer';\n            const countText = selectedCount > 0 ?\n                `找到 ${_ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData.length} 条记录，已选择 ${selectedCount} 条` :\n                `找到 ${_ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData.length} 条记录`;\n            dataCount.textContent = countText;\n            dataCount.style.color = '#52c41a';\n        }\n    },\n\n    getSelectedEventsCount: () => {\n        const checkboxes = document.querySelectorAll('#eventsTable input[type=\"checkbox\"]:not(#selectAll):checked');\n        return checkboxes.length;\n    },\n\n    getSelectedEvents: () => {\n        const checkboxes = document.querySelectorAll('#eventsTable input[type=\"checkbox\"]:not(#selectAll):checked');\n        const selectedEvents = [];\n        checkboxes.forEach(checkbox => {\n            const index = Number(checkbox.dataset.index);\n            if (!Number.isNaN(index) && _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData[index]) {\n                selectedEvents.push(_ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData[index]);\n            }\n        });\n        return selectedEvents.length > 0 ? selectedEvents : _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData;\n    },\n\n    updateEventsTable: () => {\n        const tbody = document.getElementById('eventsBody');\n        tbody.innerHTML = '';\n\n        if (_ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData.length === 0) {\n            tbody.innerHTML = '<tr><td colspan=\"5\" style=\"padding: 24px; text-align: center; color: var(--text-muted, #8e8e93); font-style: italic; font-size: 13px;\">暂无数据，请调整日期范围或检查网络连接</td></tr>';\n            return;\n        }\n\n        _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData.forEach((event, index) => {\n            const row = document.createElement('tr');\n            const commitTitle = event.target_title || '未知提交';\n            row.style.cssText = 'transition: background-color 0.2s ease; border-bottom: 1px solid var(--border-light, #f0f0f0);';\n\n            row.addEventListener('mouseenter', () => {\n                row.style.backgroundColor = 'var(--hover-bg, #f8f8f8)';\n            });\n\n            row.addEventListener('mouseleave', () => {\n                row.style.backgroundColor = '';\n            });\n\n            row.innerHTML = `\n                <td style=\"padding: 12px 8px; text-align: center;\">\n                    <input type=\"checkbox\" data-index=\"${index}\" style=\"cursor: pointer; transform: scale(1.1);\" checked>\n                </td>\n                <td style=\"padding: 12px 8px; color: var(--text-secondary, #6e6e73); font-size: 12px; text-align: center; font-weight: 500;\">${index + 1}</td>\n                <td style=\"padding: 12px 8px; color: var(--text-color, #1d1d1f); font-size: 12px; font-weight: 500;\">${_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].formatTime(event.created_at).split(' ')[0]}</td>\n                <td style=\"padding: 12px 8px; color: var(--text-color, #1d1d1f); font-size: 12px; word-break: break-word; line-height: 1.4;\">${commitTitle}</td>\n                <td style=\"padding: 12px 8px; text-align: center;\">\n                    <button class=\"copy-btn\" data-text=\"${commitTitle.replace(/\"/g, '&quot;')}\" style=\"padding: 6px 8px; background: var(--button-bg, #f2f2f7); border: none; border-radius: 6px; cursor: pointer; font-size: 11px; color: var(--text-secondary, #6e6e73); transition: all 0.2s ease;\" title=\"复制此条记录\">📋</button>\n                </td>\n            `;\n            tbody.appendChild(row);\n        });\n\n        document.querySelectorAll('#eventsTable input[type=\"checkbox\"]:not(#selectAll)').forEach(checkbox => {\n            checkbox.addEventListener('change', () => {\n                Main.updateButtons();\n                Main.updateSelectAllCheckbox();\n            });\n        });\n\n        document.querySelectorAll('.copy-btn').forEach(btn => {\n            btn.addEventListener('mouseenter', () => {\n                const button = btn;\n                button.style.background = 'var(--primary-color, #007aff)';\n                button.style.color = 'white';\n            });\n\n            btn.addEventListener('mouseleave', () => {\n                const button = btn;\n                button.style.background = 'var(--button-bg, #f2f2f7)';\n                button.style.color = 'var(--text-secondary, #6e6e73)';\n            });\n\n            btn.addEventListener('click', (e) => {\n                const { text } = e.target.dataset;\n                if (navigator.clipboard) {\n                    navigator.clipboard.writeText(text);\n                    _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification('已复制到剪贴板', 'success');\n                } else {\n                    _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification('复制功能不可用', 'error');\n                }\n            });\n        });\n\n        Main.updateButtons();\n        Main.updateSelectAllCheckbox();\n    },\n\n    updateSelectAllCheckbox: () => {\n        const selectAllCheckbox = document.getElementById('selectAll');\n        const otherCheckboxes = document.querySelectorAll('#eventsTable input[type=\"checkbox\"]:not(#selectAll)');\n        const checkedCheckboxes = document.querySelectorAll('#eventsTable input[type=\"checkbox\"]:not(#selectAll):checked');\n\n        if (otherCheckboxes.length === 0) {\n            selectAllCheckbox.checked = false;\n            selectAllCheckbox.indeterminate = false;\n        } else if (checkedCheckboxes.length === otherCheckboxes.length) {\n            selectAllCheckbox.checked = true;\n            selectAllCheckbox.indeterminate = false;\n        } else if (checkedCheckboxes.length > 0) {\n            selectAllCheckbox.checked = false;\n            selectAllCheckbox.indeterminate = true;\n        } else {\n            selectAllCheckbox.checked = false;\n            selectAllCheckbox.indeterminate = false;\n        }\n    },\n\n    exportData: () => {\n        const success = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].exportToCsv(_ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData, _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].currentStartDate, _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].currentEndDate);\n        if (success) {\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification('数据导出成功', 'success');\n        } else {\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification('浏览器不支持文件下载功能', 'error');\n        }\n    },\n\n    copyReport: () => {\n        const reportContent = document.getElementById('reportContent').textContent;\n        if (typeof GM_setClipboard !== 'undefined') {\n            GM_setClipboard(reportContent);\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification('周报已复制到剪贴板', 'success');\n        } else if (navigator.clipboard) {\n            navigator.clipboard.writeText(reportContent);\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification('周报已复制到剪贴板', 'success');\n        } else {\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification('复制功能不可用', 'error');\n        }\n    },\n\n    onGenerateReport: async () => {\n        const generateBtn = document.getElementById('generateReport');\n        const additionalPrompt = document.getElementById('additionalPrompt').value.trim();\n        const reportResult = document.getElementById('reportResult');\n        const reportContent = document.getElementById('reportContent');\n\n        const config = _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get();\n        const configErrors = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].validateConfig(config);\n        if (configErrors.length > 0) {\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification(`配置不完整：${configErrors.join('、')}`, 'error');\n            return;\n        }\n\n        const selectedEvents = Main.getSelectedEvents();\n        if (selectedEvents.length === 0) {\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification('请选择至少一条记录', 'warning');\n            return;\n        }\n\n        const originalText = generateBtn.textContent;\n        generateBtn.disabled = true;\n        generateBtn.textContent = '🤖 生成中...';\n        generateBtn.style.background = '#d9d9d9';\n        generateBtn.style.cursor = 'not-allowed';\n\n        try {\n            const result = await _api_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].generateReport(selectedEvents, additionalPrompt, config);\n\n            if (result && result.content) {\n                reportContent.textContent = result.content;\n                reportResult.style.display = 'block';\n\n                if (result.usage) {\n                    _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].lastTokenUsage = result.usage;\n                    _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].updateBalanceDisplay();\n                }\n\n                _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification('周报生成成功', 'success');\n\n                setTimeout(() => {\n                    reportResult.scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'start'\n                    });\n                }, 100);\n            } else {\n                throw new Error('生成的周报内容为空');\n            }\n        } catch (error) {\n            console.error('生成周报失败:', error);\n            let errorMessage = '生成周报失败';\n\n            if (error.message.includes('401')) {\n                errorMessage = 'API Key 无效或已过期';\n            } else if (error.message.includes('403')) {\n                errorMessage = 'API 访问被拒绝，请检查权限';\n            } else if (error.message.includes('429')) {\n                errorMessage = 'API 调用频率过高，请稍后重试';\n            } else if (error.message.includes('insufficient_quota')) {\n                errorMessage = 'API 配额不足，请充值后重试';\n            } else if (error.message) {\n                errorMessage = error.message;\n            }\n\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification(errorMessage, 'error');\n        } finally {\n            generateBtn.disabled = false;\n            generateBtn.textContent = originalText;\n            generateBtn.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';\n            generateBtn.style.cursor = 'pointer';\n        }\n    }\n};\n\n// 为UI添加loadEvents方法\n_ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadEvents = async () => {\n    const refreshBtn = document.getElementById('refreshEvents');\n    const originalText = refreshBtn.textContent;\n\n    refreshBtn.disabled = true;\n    refreshBtn.textContent = '🔄 加载中...';\n    refreshBtn.style.background = '#d9d9d9';\n    refreshBtn.style.cursor = 'not-allowed';\n\n    try {\n        const config = _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get();\n        const configErrors = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].validateConfig(config);\n\n        if (configErrors.length > 0) {\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification(`无法加载数据：${configErrors.join('、')}`, 'error');\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData = [];\n            Main.updateEventsTable();\n            return;\n        }\n\n        const startDate = `${_ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].currentStartDate}T00:00:00.000Z`;\n        const endDate = `${_ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].currentEndDate}T23:59:59.999Z`;\n\n        const events = await _api_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getEvents(startDate, endDate, config);\n\n        if (Array.isArray(events)) {\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData = events;\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification(`成功加载 ${events.length} 条记录`, 'success');\n        } else {\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData = [];\n            _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification('数据格式错误', 'error');\n        }\n    } catch (error) {\n        console.error('加载事件失败:', error);\n        _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eventsData = [];\n\n        let errorMessage = '加载数据失败';\n        if (error.message.includes('401')) {\n            errorMessage = 'Access Token 无效或已过期';\n        } else if (error.message.includes('403')) {\n            errorMessage = 'GitLab 访问被拒绝，请检查 Token 权限';\n        } else if (error.message.includes('404')) {\n            errorMessage = 'GitLab API 地址不正确';\n        } else if (error.message) {\n            errorMessage = error.message;\n        }\n\n        _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showNotification(errorMessage, 'error');\n    } finally {\n        Main.updateEventsTable();\n\n        refreshBtn.disabled = false;\n        refreshBtn.textContent = originalText;\n        refreshBtn.style.background = 'var(--success-color, #30d158)';\n        refreshBtn.style.cursor = 'pointer';\n    }\n};\n\n// 为UI添加createPanel方法\n_ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].createPanel = () => {\n    _ui_panels_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].createPanel(_ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"], Main);\n};\n\n// 初始化应用\nfunction init() {\n    _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].updateTheme();\n    _ui_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].createButton();\n}\n\n// 等待DOM加载完成后初始化\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', init);\n} else {\n    init();\n}\n\n\n//# sourceURL=webpack://tm/./src/index.js?");

/***/ }),

/***/ "./src/ui-panels.js":
/*!**************************!*\
  !*** ./src/ui-panels.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ \"./src/config.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api.js */ \"./src/api.js\");\n\n\n\n\nconst UIPanels = {\n    createPanel: (UI, Main) => {\n        UI.panel = document.createElement('div');\n        UI.panel.style.cssText = `\n            position: fixed;\n            top: 60px;\n            right: 20px;\n            width: 750px;\n            height: calc(100vh - 80px);\n            background: var(--panel-bg, white);\n            border: 1px solid var(--border-color, #e1e5e9);\n            border-radius: 12px;\n            box-shadow: var(--shadow-large, 0 4px 20px rgba(0,0,0,0.08));\n            backdrop-filter: blur(20px);\n            z-index: 10001;\n            display: none;\n            overflow: hidden;\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n            transform-origin: bottom right;\n            transition: all 0.3s cubic-bezier(0.25, 0.10, 0.25, 1.00);\n            opacity: 0;\n            transform: scale(0.3) translateY(50px);\n        `;\n\n        const [thisWeekStart, thisWeekEnd] = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getThisWeekRange();\n        UI.currentStartDate = thisWeekStart;\n        UI.currentEndDate = thisWeekEnd;\n\n        UI.panel.innerHTML = `\n            <div style=\"display: flex; flex-direction: column; height: 100%;\">\n                <div style=\"padding: 20px; border-bottom: 1px solid var(--border-light, #f0f0f0); background: var(--card-bg, #f8f9fa); flex-shrink: 0; border-radius: 12px 12px 0 0;\">\n                    <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;\">\n                        <h3 style=\"margin: 0; color: var(--text-color, #1d1d1f); font-size: 18px; font-weight: 600;\">GitLab 周报生成器</h3>\n                        <div style=\"display: flex; gap: 8px; align-items: center;\">\n                            <button id=\"openSettings\" style=\"background: var(--button-bg, #f2f2f7); border: none; font-size: 16px; cursor: pointer; color: var(--text-secondary, #6e6e73); padding: 8px; border-radius: 8px; transition: all 0.2s ease;\" title=\"打开设置\">⚙️</button>\n                            <button id=\"closePanel\" style=\"background: var(--button-bg, #f2f2f7); border: none; font-size: 18px; cursor: pointer; color: var(--text-muted, #8e8e93); padding: 8px; border-radius: 8px; transition: all 0.2s ease;\">×</button>\n                        </div>\n                    </div>\n                    \n                    <div style=\"display: flex; gap: 12px; align-items: center; flex-wrap: wrap; margin-bottom: 12px;\">\n                        <div style=\"display: flex; gap: 8px; align-items: center;\">\n                            <label style=\"font-size: 14px; color: var(--text-secondary, #6e6e73); min-width: 50px; line-height: 1; display: flex; align-items: center; font-weight: 500;\">开始:</label>\n                            <input type=\"date\" id=\"startDate\" value=\"${thisWeekStart}\" style=\"height: 32px; padding: 0 12px; border: 1px solid var(--border-color, #e1e5e9); border-radius: 8px; font-size: 13px; width: 130px; background: var(--panel-bg, white); color: var(--text-color, #1d1d1f); box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08));\">\n                        </div>\n                        \n                        <div style=\"display: flex; gap: 8px; align-items: center;\">\n                            <label style=\"font-size: 14px; color: var(--text-secondary, #6e6e73); min-width: 50px; line-height: 1; display: flex; align-items: center; font-weight: 500;\">结束:</label>\n                            <input type=\"date\" id=\"endDate\" value=\"${thisWeekEnd}\" style=\"height: 32px; padding: 0 12px; border: 1px solid var(--border-color, #e1e5e9); border-radius: 8px; font-size: 13px; width: 130px; background: var(--panel-bg, white); color: var(--text-color, #1d1d1f); box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08));\">\n                        </div>\n                        \n                        <div style=\"display: flex; gap: 6px;\">\n                            <button id=\"thisWeek\" style=\"height: 32px; padding: 0 12px; border: 1px solid var(--primary-color, #007aff); border-radius: 8px; cursor: pointer; font-size: 12px; white-space: nowrap; background: rgba(0, 122, 255, 0.1); color: var(--primary-color, #007aff); font-weight: 500; transition: all 0.2s ease;\">本周</button>\n                            <button id=\"lastWeek\" style=\"height: 32px; padding: 0 12px; border: 1px solid var(--success-color, #30d158); border-radius: 8px; cursor: pointer; font-size: 12px; white-space: nowrap; background: rgba(48, 209, 88, 0.1); color: var(--success-color, #30d158); font-weight: 500; transition: all 0.2s ease;\">上周</button>\n                            <button id=\"thisMonth\" style=\"height: 32px; padding: 0 12px; border: 1px solid var(--warning-color, #ff9500); border-radius: 8px; cursor: pointer; font-size: 12px; white-space: nowrap; background: rgba(255, 149, 0, 0.1); color: var(--warning-color, #ff9500); font-weight: 500; transition: all 0.2s ease;\">本月</button>\n                            <button id=\"lastMonth\" style=\"height: 32px; padding: 0 12px; border: 1px solid var(--error-color, #ff3b30); border-radius: 8px; cursor: pointer; font-size: 12px; white-space: nowrap; background: rgba(255, 59, 48, 0.1); color: var(--error-color, #ff3b30); font-weight: 500; transition: all 0.2s ease;\">上月</button>\n                        </div>\n                    </div>\n                    \n                    <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n                        <div>\n                            <span id=\"dataCount\" style=\"color: var(--text-secondary, #6e6e73); font-size: 13px; font-weight: 500;\"></span>\n                            <span id=\"dateRange\" style=\"color: var(--text-muted, #8e8e93); font-size: 12px; margin-left: 12px;\"></span>\n                        </div>\n                        <button id=\"refreshEvents\" style=\"height: 32px; padding: 0 16px; background: var(--success-color, #30d158); color: white; border: none; border-radius: 8px; cursor: pointer; font-size: 13px; font-weight: 600; white-space: nowrap; box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); transition: all 0.2s ease; min-width: 80px;\">🔄 刷新</button>\n                    </div>\n                </div>\n                \n                <div id=\"scrollableContent\" style=\"flex: 1; overflow-y: auto; display: flex; flex-direction: column;\">\n                    <div style=\"max-height: 240px; overflow-y: auto; border-bottom: 1px solid var(--border-light, #f0f0f0); flex-shrink: 0;\">\n                        <table id=\"eventsTable\" style=\"width: 100%; border-collapse: collapse;\">\n                            <thead style=\"position: sticky; top: 0; background: var(--panel-bg, white); z-index: 1;\">\n                                <tr style=\"background: var(--card-bg, #f8f9fa);\">\n                                    <th style=\"padding: 12px 8px; border-bottom: 1px solid var(--border-light, #f0f0f0); text-align: center; color: var(--text-color, #1d1d1f); font-weight: 600; width: 40px; font-size: 12px;\">\n                                        <input type=\"checkbox\" id=\"selectAll\" style=\"cursor: pointer; transform: scale(1.1);\" title=\"全选/取消全选\" checked>\n                                    </th>\n                                    <th style=\"padding: 12px 8px; border-bottom: 1px solid var(--border-light, #f0f0f0); text-align: left; color: var(--text-color, #1d1d1f); font-weight: 600; width: 40px; font-size: 12px;\">#</th>\n                                    <th style=\"padding: 12px 8px; border-bottom: 1px solid var(--border-light, #f0f0f0); text-align: left; color: var(--text-color, #1d1d1f); font-weight: 600; width: 130px; font-size: 12px;\">时间</th>\n                                    <th style=\"padding: 12px 8px; border-bottom: 1px solid var(--border-light, #f0f0f0); text-align: left; color: var(--text-color, #1d1d1f); font-weight: 600; font-size: 12px;\">提交内容</th>\n                                    <th style=\"padding: 12px 8px; border-bottom: 1px solid var(--border-light, #f0f0f0); text-align: center; color: var(--text-color, #1d1d1f); font-weight: 600; width: 50px; font-size: 12px;\">操作</th>\n                                </tr>\n                            </thead>\n                            <tbody id=\"eventsBody\">\n                            </tbody>\n                        </table>\n                    </div>\n                    \n                    <div style=\"padding: 20px; border-bottom: 1px solid var(--border-light, #f0f0f0); flex-shrink: 0;\">\n                        <div style=\"margin-bottom: 16px;\">\n                            <label style=\"display: block; margin-bottom: 8px; font-weight: 600; color: var(--text-color, #1d1d1f); font-size: 15px;\">附加要求:</label>\n                            <textarea id=\"additionalPrompt\" rows=\"3\" style=\"width: 100%; border: 1px solid var(--border-color, #e1e5e9); border-radius: 8px; padding: 12px; resize: vertical; font-size: 13px; line-height: 1.4; background: var(--panel-bg, white); color: var(--text-color, #1d1d1f); box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\" placeholder=\"输入附加要求，如：重点突出某个功能模块...\">${_config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get().DEFAULT_ADDITIONAL_PROMPT}</textarea>\n                        </div>\n                        \n                        <div style=\"margin-bottom: 16px; display: flex; gap: 16px; padding: 12px; background: var(--card-bg, #f8f9fa); border-radius: 8px; border: 1px solid var(--border-light, #f0f0f0);\">\n                            <span id=\"balanceInfo\" style=\"color: var(--text-secondary, #6e6e73); font-size: 12px; font-weight: 500;\"></span>\n                            <span id=\"tokenUsage\" style=\"color: var(--text-secondary, #6e6e73); font-size: 12px; font-weight: 500;\"></span>\n                        </div>\n                        \n                        <div style=\"display: flex; gap: 12px;\">\n                            <button id=\"generateReport\" style=\"flex: 1; padding: 14px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border: none; border-radius: 8px; cursor: pointer; font-size: 15px; font-weight: 600; box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); transition: all 0.2s ease;\" disabled>🤖 生成周报</button>\n                            <button id=\"exportData\" style=\"padding: 14px 20px; background: var(--primary-color, #007aff); color: white; border: none; border-radius: 8px; cursor: pointer; font-size: 15px; font-weight: 600; box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); transition: all 0.2s ease;\" disabled>📤 导出数据</button>\n                        </div>\n                    </div>\n                    \n                    <div id=\"reportResult\" style=\"padding: 20px; background: var(--card-bg, #f8f9fa); display: none; flex: 1; min-height: 200px;\">\n                        <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 12px;\">\n                            <h4 style=\"margin: 0; color: var(--text-color, #1d1d1f); font-size: 17px; font-weight: 600;\">生成的周报:</h4>\n                            <button id=\"copyReport\" style=\"padding: 8px 12px; background: var(--primary-color, #007aff); color: white; border: none; border-radius: 8px; cursor: pointer; font-size: 13px; font-weight: 600; box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08));\">📋 复制</button>\n                        </div>\n                        <div id=\"reportContent\" style=\"background: var(--panel-bg, white); padding: 20px; border-radius: 8px; border: 1px solid var(--border-color, #e1e5e9); white-space: pre-wrap; color: var(--text-color, #1d1d1f) !important; line-height: 1.6; font-size: 14px; min-height: 120px; height: calc(100% - 50px); overflow-y: auto; box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\"></div>\n                    </div>\n                </div>\n            </div>\n        `;\n\n        document.body.appendChild(UI.panel);\n\n        const scrollableContent = document.getElementById('scrollableContent');\n        scrollableContent.addEventListener('wheel', (e) => {\n            e.stopPropagation();\n        });\n        scrollableContent.addEventListener('touchmove', (e) => {\n            e.stopPropagation();\n        });\n\n        UIPanels.bindPanelEvents(UI, Main);\n        UIPanels.updateDateRange(UI);\n        UI.updateTheme();\n\n        UIPanels.createSettingsPanel(UI);\n    },\n\n    bindPanelEvents: (UI, Main) => {\n        document.getElementById('closePanel').addEventListener('click', () => {\n            UI.minimizePanel();\n        });\n\n        document.getElementById('openSettings').addEventListener('mouseenter', (e) => {\n            const btn = e.target;\n            btn.style.background = 'var(--hover-bg, #f8f8f8)';\n            btn.style.color = 'var(--primary-color, #007aff)';\n        });\n\n        document.getElementById('openSettings').addEventListener('mouseleave', (e) => {\n            const btn = e.target;\n            btn.style.background = 'var(--button-bg, #f2f2f7)';\n            btn.style.color = 'var(--text-secondary, #6e6e73)';\n        });\n\n        document.getElementById('openSettings').addEventListener('click', () => {\n            UIPanels.toggleSettingsPanel();\n        });\n\n        document.getElementById('startDate').addEventListener('change', () => UIPanels.updateDateRange(UI));\n        document.getElementById('endDate').addEventListener('change', () => UIPanels.updateDateRange(UI));\n\n        document.getElementById('thisWeek').addEventListener('click', () => {\n            const [start, end] = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getThisWeekRange();\n            UIPanels.setDateRangeAndRefresh(start, end, UI);\n        });\n        document.getElementById('lastWeek').addEventListener('click', () => {\n            const [start, end] = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLastWeekRange();\n            UIPanels.setDateRangeAndRefresh(start, end, UI);\n        });\n        document.getElementById('thisMonth').addEventListener('click', () => {\n            const [start, end] = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getThisMonthRange();\n            UIPanels.setDateRangeAndRefresh(start, end, UI);\n        });\n        document.getElementById('lastMonth').addEventListener('click', () => {\n            const [start, end] = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLastMonthRange();\n            UIPanels.setDateRangeAndRefresh(start, end, UI);\n        });\n\n        document.getElementById('refreshEvents').addEventListener('click', () => UI.loadEvents());\n        document.getElementById('generateReport').addEventListener('click', () => Main.onGenerateReport());\n        document.getElementById('exportData').addEventListener('click', () => Main.exportData());\n        document.getElementById('copyReport').addEventListener('click', () => Main.copyReport());\n\n        document.getElementById('selectAll').addEventListener('change', (e) => {\n            const isChecked = e.target.checked;\n            const checkboxes = document.querySelectorAll('#eventsTable input[type=\"checkbox\"]:not(#selectAll)');\n            checkboxes.forEach(checkbox => {\n                const cb = checkbox;\n                cb.checked = isChecked;\n            });\n            Main.updateButtons();\n        });\n    },\n\n    setDateRange: (startDate, endDate, UI) => {\n        document.getElementById('startDate').value = startDate;\n        document.getElementById('endDate').value = endDate;\n        UIPanels.updateDateRange(UI);\n    },\n\n    setDateRangeAndRefresh: async (startDate, endDate, UI) => {\n        UIPanels.setDateRange(startDate, endDate, UI);\n        await UI.loadEvents();\n    },\n\n    updateDateRange: (UI) => {\n        UI.currentStartDate = document.getElementById('startDate').value;\n        UI.currentEndDate = document.getElementById('endDate').value;\n        const dateRangeText = `${UI.currentStartDate} 至 ${UI.currentEndDate}`;\n        document.getElementById('dateRange').textContent = dateRangeText;\n    },\n\n    createSettingsPanel: (UI) => {\n        const config = _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get();\n        UI.settingsPanel = document.createElement('div');\n        UI.settingsPanel.style.cssText = `\n            position: fixed;\n            top: 60px;\n            right: 20px;\n            width: 600px;\n            height: calc(100vh - 80px);\n            background: var(--panel-bg, white);\n            border: 1px solid var(--border-color, #e1e5e9);\n            border-radius: 12px;\n            box-shadow: var(--shadow-large, 0 4px 20px rgba(0,0,0,0.08));\n            backdrop-filter: blur(20px);\n            z-index: 10001;\n            display: none;\n            overflow: hidden;\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        `;\n\n        UI.settingsPanel.innerHTML = `\n            <div style=\"display: flex; flex-direction: column; height: 100%;\">\n                <div style=\"padding: 20px; border-bottom: 1px solid var(--border-light, #f0f0f0); background: var(--card-bg, #f8f9fa); flex-shrink: 0; border-radius: 12px 12px 0 0;\">\n                    <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;\">\n                        <h3 style=\"margin: 0; color: var(--text-color, #1d1d1f); font-size: 18px; font-weight: 600;\">⚙️ 插件设置</h3>\n                        <button id=\"closeSettingsPanel\" style=\"background: var(--button-bg, #f2f2f7); border: none; font-size: 18px; cursor: pointer; color: var(--text-muted, #8e8e93); padding: 8px; border-radius: 8px; transition: all 0.2s ease;\">×</button>\n                    </div>\n                </div>\n                \n                <div style=\"flex: 1; overflow-y: auto; padding: 20px;\">\n                    <div style=\"margin-bottom: 24px;\">\n                        <h4 style=\"margin: 0 0 12px 0; color: var(--text-color, #1d1d1f); font-size: 16px; font-weight: 600;\">外观设置</h4>\n                        <div style=\"margin-bottom: 16px;\">\n                            <label style=\"display: block; margin-bottom: 8px; font-size: 14px; color: var(--text-secondary, #6e6e73); font-weight: 500;\">主题模式:</label>\n                            <select id=\"themeMode\" style=\"width: 100%; padding: 12px; border: 1px solid var(--border-color, #e1e5e9); border-radius: 8px; font-size: 14px; background: var(--panel-bg, white); color: var(--text-color, #1d1d1f); box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); transition: border-color 0.2s ease, box-shadow 0.2s ease;\">\n                                <option value=\"light\" ${config.THEME_MODE === 'light' ? 'selected' : ''}>浅色模式</option>\n                                <option value=\"dark\" ${config.THEME_MODE === 'dark' ? 'selected' : ''}>深色模式</option>\n                                <option value=\"system\" ${config.THEME_MODE === 'system' ? 'selected' : ''}>跟随系统</option>\n                            </select>\n                        </div>\n                    </div>\n                    \n                    <div style=\"margin-bottom: 24px;\">\n                        <h4 style=\"margin: 0 0 12px 0; color: var(--text-color, #1d1d1f); font-size: 16px; font-weight: 600;\">GitLab 配置</h4>\n                        <div style=\"margin-bottom: 16px;\">\n                            <label style=\"display: block; margin-bottom: 8px; font-size: 14px; color: var(--text-secondary, #6e6e73); font-weight: 500;\">GitLab API URL:</label>\n                            <input type=\"text\" id=\"gitlabUrl\" value=\"${config.GITLAB_URL}\" style=\"width: 100%; padding: 12px; border: 1px solid var(--border-color, #e1e5e9); border-radius: 8px; font-size: 14px; background: var(--panel-bg, white); color: var(--text-color, #1d1d1f); box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); transition: border-color 0.2s ease, box-shadow 0.2s ease;\">\n                        </div>\n                        <div style=\"margin-bottom: 16px;\">\n                            <label style=\"display: block; margin-bottom: 8px; font-size: 14px; color: var(--text-secondary, #6e6e73); font-weight: 500;\">Access Token:</label>\n                            <input type=\"text\" id=\"accessToken\" value=\"${config.ACCESS_TOKEN}\" style=\"width: 100%; padding: 12px; border: 1px solid var(--border-color, #e1e5e9); border-radius: 8px; font-size: 14px; background: var(--panel-bg, white); color: var(--text-color, #1d1d1f); box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); transition: border-color 0.2s ease, box-shadow 0.2s ease;\">\n                        </div>\n                    </div>\n                    \n                    <div style=\"margin-bottom: 24px;\">\n                        <h4 style=\"margin: 0 0 12px 0; color: var(--text-color, #1d1d1f); font-size: 16px; font-weight: 600;\">AI 配置</h4>\n                        <div style=\"margin-bottom: 16px;\">\n                            <label style=\"display: block; margin-bottom: 8px; font-size: 14px; color: var(--text-secondary, #6e6e73); font-weight: 500;\">DeepSeek API URL:</label>\n                            <input type=\"text\" id=\"deepseekUrl\" value=\"${config.DEEPSEEK_BASE_URL}\" style=\"width: 100%; padding: 12px; border: 1px solid var(--border-color, #e1e5e9); border-radius: 8px; font-size: 14px; background: var(--panel-bg, white); color: var(--text-color, #1d1d1f); box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); transition: border-color 0.2s ease, box-shadow 0.2s ease;\">\n                        </div>\n                        <div style=\"margin-bottom: 16px;\">\n                            <label style=\"display: block; margin-bottom: 8px; font-size: 14px; color: var(--text-secondary, #6e6e73); font-weight: 500;\">API Key:</label>\n                            <input type=\"text\" id=\"deepseekKey\" value=\"${config.DEEPSEEK_API_KEY}\" style=\"width: 100%; padding: 12px; border: 1px solid var(--border-color, #e1e5e9); border-radius: 8px; font-size: 14px; background: var(--panel-bg, white); color: var(--text-color, #1d1d1f); box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); transition: border-color 0.2s ease, box-shadow 0.2s ease;\">\n                        </div>\n                        <div style=\"margin-bottom: 16px;\">\n                            <label style=\"display: block; margin-bottom: 8px; font-size: 14px; color: var(--text-secondary, #6e6e73); font-weight: 500;\">模型:</label>\n                            <select id=\"deepseekModel\" style=\"width: 100%; padding: 12px; border: 1px solid var(--border-color, #e1e5e9); border-radius: 8px; font-size: 14px; background: var(--panel-bg, white); color: var(--text-color, #1d1d1f); box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); transition: border-color 0.2s ease, box-shadow 0.2s ease;\">\n                                <option value=\"deepseek-chat\" ${config.DEEPSEEK_MODEL === 'deepseek-chat' ? 'selected' : ''}>deepseek-chat</option>\n                                <option value=\"deepseek-reasoner\" ${config.DEEPSEEK_MODEL === 'deepseek-reasoner' ? 'selected' : ''}>deepseek-reasoner</option>\n                            </select>\n                        </div>\n                        <div style=\"margin-bottom: 16px;\">\n                            <label style=\"display: block; margin-bottom: 8px; font-size: 14px; color: var(--text-secondary, #6e6e73); font-weight: 500;\">最大 Token 数 (100-2000):</label>\n                            <input type=\"number\" id=\"maxTokens\" value=\"${config.DEEPSEEK_MAX_TOKENS}\" min=\"100\" max=\"2000\" style=\"width: 100%; padding: 12px; border: 1px solid var(--border-color, #e1e5e9); border-radius: 8px; font-size: 14px; background: var(--panel-bg, white); color: var(--text-color, #1d1d1f); box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); transition: border-color 0.2s ease, box-shadow 0.2s ease;\">\n                        </div>\n                    </div>\n                    \n                    <div style=\"margin-bottom: 24px;\">\n                        <h4 style=\"margin: 0 0 12px 0; color: var(--text-color, #1d1d1f); font-size: 16px; font-weight: 600;\">提示词配置</h4>\n                        <div style=\"margin-bottom: 16px;\">\n                            <label style=\"display: block; margin-bottom: 8px; font-size: 14px; color: var(--text-secondary, #6e6e73); font-weight: 500;\">系统提示词:</label>\n                            <textarea id=\"systemPrompt\" rows=\"6\" style=\"width: 100%; padding: 12px; border: 1px solid var(--border-color, #e1e5e9); border-radius: 8px; font-size: 14px; background: var(--panel-bg, white); color: var(--text-color, #1d1d1f); resize: vertical; box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); transition: border-color 0.2s ease, box-shadow 0.2s ease; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.4;\">${config.SYSTEM_PROMPT}</textarea>\n                        </div>\n                        <div style=\"margin-bottom: 16px;\">\n                            <label style=\"display: block; margin-bottom: 8px; font-size: 14px; color: var(--text-secondary, #6e6e73); font-weight: 500;\">默认附加要求:</label>\n                            <textarea id=\"defaultPrompt\" rows=\"3\" style=\"width: 100%; padding: 12px; border: 1px solid var(--border-color, #e1e5e9); border-radius: 8px; font-size: 14px; background: var(--panel-bg, white); color: var(--text-color, #1d1d1f); resize: vertical; box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08)); transition: border-color 0.2s ease, box-shadow 0.2s ease; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.4;\">${config.DEFAULT_ADDITIONAL_PROMPT}</textarea>\n                        </div>\n                    </div>\n                </div>\n                \n                <div style=\"padding: 20px; border-top: 1px solid var(--border-light, #f0f0f0); background: var(--card-bg, #f8f9fa); flex-shrink: 0; border-radius: 0 0 12px 12px;\">\n                    <div style=\"display: flex; gap: 12px; justify-content: flex-end;\">\n                        <button id=\"resetSettings\" style=\"padding: 12px 20px; background: var(--error-color, #ff3b30); color: white; border: none; border-radius: 8px; cursor: pointer; font-size: 14px; font-weight: 600; transition: all 0.2s ease; box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08));\">重置</button>\n                        <button id=\"saveSettings\" style=\"padding: 12px 20px; background: var(--primary-color, #007aff); color: white; border: none; border-radius: 8px; cursor: pointer; font-size: 14px; font-weight: 600; transition: all 0.2s ease; box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.08));\">保存</button>\n                    </div>\n                </div>\n            </div>\n        `;\n\n        document.body.appendChild(UI.settingsPanel);\n        UIPanels.bindSettingsEvents(UI);\n\n        setTimeout(() => {\n            const maxTokensInput = document.getElementById('maxTokens');\n            if (maxTokensInput) {\n                _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].validateTokenInput(maxTokensInput, UI.showNotification);\n            }\n        }, 100);\n\n        _api_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fetchAvailableModels(config).then((models) => {\n            const modelSelect = document.getElementById('deepseekModel');\n            if (modelSelect && models.length > 0) {\n                const modelOptions = models.map(model =>\n                    `<option value=\"${model.id}\" ${model.id === config.DEEPSEEK_MODEL ? 'selected' : ''}>${model.name || model.id}</option>`\n                ).join('');\n                modelSelect.innerHTML = modelOptions;\n            }\n        });\n    },\n\n    bindSettingsEvents: (UI) => {\n        document.getElementById('closeSettingsPanel').addEventListener('click', () => {\n            UI.settingsPanel.style.display = 'none';\n        });\n\n        const maxTokensInput = document.getElementById('maxTokens');\n        if (maxTokensInput) {\n            _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].validateTokenInput(maxTokensInput, UI.showNotification);\n        }\n\n        document.getElementById('saveSettings').addEventListener('click', () => {\n            const maxTokens = parseInt(document.getElementById('maxTokens').value, 10);\n            if (maxTokens > 2000) {\n                UI.showNotification('Token数量不能超过2000', 'error');\n                document.getElementById('maxTokens').value = '2000';\n                return;\n            }\n\n            const newConfig = {\n                THEME_MODE: document.getElementById('themeMode').value.trim(),\n                GITLAB_URL: document.getElementById('gitlabUrl').value.trim(),\n                ACCESS_TOKEN: document.getElementById('accessToken').value.trim(),\n                DEEPSEEK_BASE_URL: document.getElementById('deepseekUrl').value.trim(),\n                DEEPSEEK_API_KEY: document.getElementById('deepseekKey').value.trim(),\n                DEEPSEEK_MODEL: document.getElementById('deepseekModel').value.trim(),\n                DEEPSEEK_MAX_TOKENS: maxTokens,\n                SYSTEM_PROMPT: document.getElementById('systemPrompt').value.trim(),\n                DEFAULT_ADDITIONAL_PROMPT: document.getElementById('defaultPrompt').value.trim()\n            };\n\n            _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].save(newConfig);\n            UI.updateTheme();\n            UI.showNotification('设置保存成功', 'success');\n\n            UI.settingsPanel.style.display = 'none';\n        });\n\n        document.getElementById('resetSettings').addEventListener('click', () => {\n            if (window.confirm('确定要重置所有设置到默认值吗？')) {\n                const defaultConfig = _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reset();\n\n                document.getElementById('themeMode').value = defaultConfig.THEME_MODE;\n                document.getElementById('gitlabUrl').value = defaultConfig.GITLAB_URL;\n                document.getElementById('accessToken').value = defaultConfig.ACCESS_TOKEN;\n                document.getElementById('deepseekUrl').value = defaultConfig.DEEPSEEK_BASE_URL;\n                document.getElementById('deepseekKey').value = defaultConfig.DEEPSEEK_API_KEY;\n                document.getElementById('deepseekModel').value = defaultConfig.DEEPSEEK_MODEL;\n                document.getElementById('maxTokens').value = defaultConfig.DEEPSEEK_MAX_TOKENS;\n                document.getElementById('systemPrompt').value = defaultConfig.SYSTEM_PROMPT;\n                document.getElementById('defaultPrompt').value = defaultConfig.DEFAULT_ADDITIONAL_PROMPT;\n\n                const resetTokenInput = document.getElementById('maxTokens');\n                if (resetTokenInput) {\n                    _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].validateTokenInput(resetTokenInput, UI.showNotification);\n                }\n\n                UI.updateTheme();\n                UI.showNotification('设置已重置', 'success');\n            }\n        });\n\n        document.getElementById('themeMode').addEventListener('change', () => {\n            const themeMode = document.getElementById('themeMode').value;\n            const currentConfig = _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get();\n            currentConfig.THEME_MODE = themeMode;\n            _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].save(currentConfig);\n            UI.updateTheme();\n            UI.showNotification('主题已切换', 'success');\n        });\n\n        if (window.matchMedia) {\n            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {\n                const config = _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get();\n                if (config.THEME_MODE === 'system') {\n                    UI.updateTheme();\n                }\n            });\n        }\n    },\n\n    toggleSettingsPanel: () => {\n        if (!window.UI.settingsPanel) {\n            return;\n        }\n\n        if (window.UI.settingsPanel.style.display === 'none') {\n            window.UI.settingsPanel.style.display = 'block';\n        } else {\n            window.UI.settingsPanel.style.display = 'none';\n        }\n    }\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UIPanels);\n\n\n//# sourceURL=webpack://tm/./src/ui-panels.js?");

/***/ }),

/***/ "./src/ui.js":
/*!*******************!*\
  !*** ./src/ui.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ \"./src/config.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api.js */ \"./src/api.js\");\n\n\n\n\n// 性能优化：防抖函数（提取到外部避免循环引用）\nconst debounce = (func, wait) => {\n    let timeout;\n    return function executedFunction(...args) {\n        const later = () => {\n            clearTimeout(timeout);\n            func(...args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n};\n\nconst UI = {\n    panel: null,\n    settingsPanel: null,\n    maskLayer: null,\n    eventsData: [],\n    currentStartDate: '',\n    currentEndDate: '',\n    userBalance: null,\n    lastTokenUsage: null,\n    originalBodyOverflow: '',\n    originalHtmlOverflow: '',\n    originalBodyPaddingRight: '',\n\n    // 性能优化：缓存常用的DOM查询\n    _domCache: new Map(),\n    _animationFrameId: null,\n    _notificationTimer: null,\n    _scrollBarWidth: null,\n\n    // 性能优化：获取缓存的DOM元素\n    getCachedElement: (selector, context = document) => {\n        const key = `${context === document ? 'doc' : 'ctx'}:${selector}`;\n        if (!UI._domCache.has(key)) {\n            const element = context.querySelector(selector);\n            UI._domCache.set(key, element);\n        }\n        return UI._domCache.get(key);\n    },\n\n    // 性能优化：清除DOM缓存\n    clearDOMCache: () => {\n        UI._domCache.clear();\n    },\n\n    // 性能优化：防抖函数\n    debounce: debounce,\n\n    // 性能优化：获取滚动条宽度（缓存）\n    getScrollBarWidth: () => {\n        if (UI._scrollBarWidth === null) {\n            UI._scrollBarWidth = window.innerWidth - document.documentElement.clientWidth;\n        }\n        return UI._scrollBarWidth;\n    },\n\n    applyTheme: (theme) => {\n        const colors = _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].THEMES[theme];\n        const root = document.documentElement;\n\n        // 性能优化：批量更新CSS属性\n        requestAnimationFrame(() => {\n            const styleUpdates = [\n                ['--panel-bg', colors.background],\n                ['--card-bg', colors.cardBg],\n                ['--border-color', colors.border],\n                ['--border-light', colors.borderLight],\n                ['--text-color', colors.text],\n                ['--text-secondary', colors.textSecondary],\n                ['--text-muted', colors.textMuted],\n                ['--primary-color', colors.primary],\n                ['--success-color', colors.success],\n                ['--warning-color', colors.warning],\n                ['--error-color', colors.error],\n                ['--button-bg', colors.buttonBg],\n                ['--hover-bg', colors.hoverBg],\n                ['--shadow', colors.shadow],\n                ['--shadow-large', colors.shadowLarge]\n            ];\n\n            styleUpdates.forEach(([property, value]) => {\n                root.style.setProperty(property, value);\n            });\n        });\n    },\n\n    updateTheme: () => {\n        const config = _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get();\n        let theme = 'light';\n        if (config.THEME_MODE === 'dark') {\n            theme = 'dark';\n        } else if (config.THEME_MODE === 'system') {\n            theme = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].detectSystemTheme();\n        }\n        UI.applyTheme(theme);\n    },\n\n    // 性能优化：优化通知创建和动画\n    showNotification: (message, type = 'info') => {\n        if (!UI.panel || UI.panel.style.display === 'none') {\n            return;\n        }\n\n        // 清除之前的定时器\n        if (UI._notificationTimer) {\n            clearTimeout(UI._notificationTimer);\n            UI._notificationTimer = null;\n        }\n\n        // 移除已存在的通知（使用缓存查询）\n        const existingNotification = UI.getCachedElement('[data-notification=\"true\"]', UI.panel);\n        if (existingNotification) {\n            UI._removeNotification(existingNotification);\n        }\n\n        const notification = UI._createNotificationElement(message, type);\n\n        // 性能优化：使用DocumentFragment减少重排\n        const fragment = document.createDocumentFragment();\n        fragment.appendChild(notification);\n        UI.panel.appendChild(fragment);\n\n        // 性能优化：使用requestAnimationFrame优化动画\n        requestAnimationFrame(() => {\n            notification.style.transform = 'translateY(0)';\n            notification.style.opacity = '1';\n        });\n\n        // 设置自动关闭定时器\n        UI._notificationTimer = setTimeout(() => {\n            UI._removeNotification(notification);\n        }, 5000);\n    },\n\n    // 性能优化：提取通知创建逻辑\n    _createNotificationElement: (message, type) => {\n        const notification = document.createElement('div');\n        notification.setAttribute('data-notification', 'true');\n\n        const typeConfig = {\n            info: { color: '#007aff', bg: 'rgba(0, 122, 255, 0.1)', icon: 'ℹ️' },\n            success: { color: '#30d158', bg: 'rgba(48, 209, 88, 0.1)', icon: '✅' },\n            error: { color: '#ff3b30', bg: 'rgba(255, 59, 48, 0.1)', icon: '❌' },\n            warning: { color: '#ff9500', bg: 'rgba(255, 149, 0, 0.1)', icon: '⚠️' }\n        };\n\n        const config = typeConfig[type] || typeConfig.info;\n\n        notification.className = 'ui-notification';\n        notification.style.cssText = `\n            position: absolute;\n            bottom: 80px;\n            left: 20px;\n            right: 20px;\n            padding: 12px 16px;\n            border-radius: 12px;\n            color: var(--text-color, #1d1d1f);\n            font-size: 14px;\n            z-index: 10003;\n            background: ${config.bg};\n            border: 1px solid ${config.color}40;\n            backdrop-filter: blur(20px);\n            -webkit-backdrop-filter: blur(20px);\n            box-shadow: 0 4px 20px rgba(0,0,0,0.1);\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            gap: 8px;\n            font-weight: 500;\n            transform: translateY(20px);\n            opacity: 0;\n            transition: all 0.3s cubic-bezier(0.25, 0.10, 0.25, 1.00);\n            will-change: transform, opacity;\n        `;\n\n        // 性能优化：使用innerHTML一次性创建结构\n        notification.innerHTML = `\n            <div style=\"display: flex; align-items: center; gap: 8px;\">\n                <span style=\"font-size: 16px;\">${config.icon}</span>\n                <span>${message}</span>\n            </div>\n            <button class=\"notification-close\" style=\"\n                background: none;\n                border: none;\n                color: ${config.color};\n                cursor: pointer;\n                font-size: 18px;\n                padding: 0;\n                margin: 0;\n                width: 24px;\n                height: 24px;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                border-radius: 50%;\n                transition: background-color 0.2s ease;\n                flex-shrink: 0;\n            \">×</button>\n        `;\n\n        // 性能优化：使用事件委托\n        const closeButton = notification.querySelector('.notification-close');\n        closeButton.addEventListener('click', () => {\n            if (UI._notificationTimer) {\n                clearTimeout(UI._notificationTimer);\n                UI._notificationTimer = null;\n            }\n            UI._removeNotification(notification);\n        }, { once: true });\n\n        // 添加悬停效果\n        closeButton.addEventListener('mouseenter', () => {\n            closeButton.style.backgroundColor = `${config.color}20`;\n        });\n        closeButton.addEventListener('mouseleave', () => {\n            closeButton.style.backgroundColor = 'transparent';\n        });\n\n        return notification;\n    },\n\n    // 性能优化：提取通知移除逻辑\n    _removeNotification: (notification) => {\n        if (!notification || !notification.parentNode) {return;}\n\n        requestAnimationFrame(() => {\n            notification.style.transform = 'translateY(20px)';\n            notification.style.opacity = '0';\n\n            setTimeout(() => {\n                if (notification.parentNode) {\n                    notification.parentNode.removeChild(notification);\n                    UI.clearDOMCache(); // 清除相关缓存\n                }\n            }, 300);\n        });\n    },\n\n    createButton: () => {\n        const button = document.createElement('button');\n        button.innerHTML = '周报';\n        button.className = 'ui-main-button';\n        button.style.cssText = `\n            position: fixed;\n            bottom: 110px;\n            right: 50px;\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            z-index: 10000;\n            background: #1890ff;\n            color: white;\n            border: none;\n            cursor: pointer;\n            font-size: 14px;\n            box-shadow: 0 2px 8px rgba(0,0,0,0.15);\n            transition: all 0.3s cubic-bezier(0.25, 0.10, 0.25, 1.00);\n            transform: scale(1);\n            will-change: transform, background-color, box-shadow;\n        `;\n\n        // 性能优化：使用passive事件监听器\n        const debouncedHover = debounce((isEnter) => {\n            requestAnimationFrame(() => {\n                if (isEnter) {\n                    button.style.background = '#40a9ff';\n                    button.style.transform = 'scale(1.1)';\n                    button.style.boxShadow = '0 4px 16px rgba(0,0,0,0.25)';\n                } else {\n                    button.style.background = '#1890ff';\n                    button.style.transform = 'scale(1)';\n                    button.style.boxShadow = '0 2px 8px rgba(0,0,0,0.15)';\n                }\n            });\n        }, 16); // ~60fps\n\n        button.addEventListener('mouseenter', () => debouncedHover(true), { passive: true });\n        button.addEventListener('mouseleave', () => debouncedHover(false), { passive: true });\n\n        button.addEventListener('click', () => {\n            requestAnimationFrame(() => {\n                button.style.transform = 'scale(0.95)';\n                setTimeout(() => {\n                    requestAnimationFrame(() => {\n                        button.style.transform = button.matches(':hover') ? 'scale(1.05)' : 'scale(1)';\n                    });\n                }, 100);\n            });\n            UI.togglePanel();\n        });\n\n        document.body.appendChild(button);\n    },\n\n    createMaskLayer: () => {\n        if (UI.maskLayer) {return;} // 避免重复创建\n\n        UI.maskLayer = document.createElement('div');\n        UI.maskLayer.className = 'ui-mask-layer';\n        UI.maskLayer.style.cssText = `\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.5);\n            backdrop-filter: blur(8px);\n            -webkit-backdrop-filter: blur(8px);\n            z-index: 9999;\n            display: none;\n            transition: opacity 0.3s ease;\n            opacity: 0;\n            will-change: opacity;\n        `;\n\n        UI.maskLayer.addEventListener('click', () => {\n            UI.minimizePanel();\n            if (UI.settingsPanel && UI.settingsPanel.style.display !== 'none') {\n                UI.settingsPanel.style.display = 'none';\n            }\n        }, { passive: true });\n\n        document.body.appendChild(UI.maskLayer);\n    },\n\n    showMaskLayer: () => {\n        if (!UI.maskLayer) {\n            UI.createMaskLayer();\n        }\n\n        const scrollBarWidth = UI.getScrollBarWidth();\n\n        UI.originalBodyOverflow = document.body.style.overflow;\n        UI.originalHtmlOverflow = document.documentElement.style.overflow;\n        UI.originalBodyPaddingRight = document.body.style.paddingRight;\n\n        // 性能优化：批量更新样式\n        requestAnimationFrame(() => {\n            UI.maskLayer.style.display = 'block';\n            document.body.style.overflow = 'hidden';\n            document.documentElement.style.overflow = 'hidden';\n            document.body.style.paddingRight = scrollBarWidth + 'px';\n\n            requestAnimationFrame(() => {\n                UI.maskLayer.style.opacity = '1';\n            });\n        });\n    },\n\n    hideMaskLayer: () => {\n        if (!UI.maskLayer) {return;}\n\n        requestAnimationFrame(() => {\n            UI.maskLayer.style.opacity = '0';\n\n            setTimeout(() => {\n                requestAnimationFrame(() => {\n                    UI.maskLayer.style.display = 'none';\n                    document.body.style.overflow = UI.originalBodyOverflow;\n                    document.documentElement.style.overflow = UI.originalHtmlOverflow;\n                    document.body.style.paddingRight = UI.originalBodyPaddingRight || '';\n                });\n            }, 300);\n        });\n    },\n\n    togglePanel: () => {\n        if (!UI.panel) {\n            // 确保方法存在后再调用\n            if (typeof UI.createPanel === 'function') {\n                UI.createPanel();\n            }\n            if (typeof UI.loadEvents === 'function') {\n                UI.loadEvents();\n            }\n        }\n\n        if (UI.panel.style.display === 'none') {\n            UI.showMaskLayer();\n\n            // 性能优化：批量更新面板样式\n            requestAnimationFrame(() => {\n                UI.panel.style.display = 'block';\n\n                // 异步获取余额，避免阻塞UI\n                UI.fetchAndShowBalance();\n\n                requestAnimationFrame(() => {\n                    UI.panel.style.opacity = '1';\n                    UI.panel.style.transform = 'scale(1) translateY(0)';\n                });\n            });\n        } else {\n            UI.minimizePanel();\n        }\n    },\n\n    minimizePanel: () => {\n        // 性能优化：使用缓存查询\n        const button = UI.getCachedElement('button[style*=\"position: fixed\"][style*=\"bottom: 110px\"]');\n        if (!button || !UI.panel) {return;}\n\n        // 性能优化：批量获取位置信息\n        const rectPanel = UI.panel.getBoundingClientRect();\n        const rectButton = button.getBoundingClientRect();\n\n        // 创建克隆元素用于动画\n        const clone = UI.panel.cloneNode(true);\n        clone.style.cssText = UI.panel.style.cssText;\n        clone.style.zIndex = '10002';\n        clone.style.pointerEvents = 'none';\n        clone.style.overflow = 'hidden';\n        clone.style.willChange = 'transform, opacity, border-radius';\n\n        // 性能优化：使用DocumentFragment\n        const fragment = document.createDocumentFragment();\n        fragment.appendChild(clone);\n        document.body.appendChild(fragment);\n\n        // 批量设置克隆元素的位置\n        requestAnimationFrame(() => {\n            Object.assign(clone.style, {\n                width: `${rectPanel.width}px`,\n                height: `${rectPanel.height}px`,\n                left: `${rectPanel.left}px`,\n                top: `${rectPanel.top}px`,\n                position: 'fixed',\n                transformOrigin: 'center'\n            });\n\n            UI.panel.style.display = 'none';\n            UI.hideMaskLayer();\n            if (UI.settingsPanel && UI.settingsPanel.style.display !== 'none') {\n                UI.settingsPanel.style.display = 'none';\n            }\n\n            // 计算动画参数\n            const targetCenterX = rectButton.left + rectButton.width / 2;\n            const targetCenterY = rectButton.top + rectButton.height / 2;\n            const originCenterX = rectPanel.left + rectPanel.width / 2;\n            const originCenterY = rectPanel.top + rectPanel.height / 2;\n\n            const deltaX = targetCenterX - originCenterX;\n            const deltaY = targetCenterY - originCenterY;\n\n            const scaleX = rectButton.width / rectPanel.width;\n            const scaleY = rectButton.height / rectPanel.height;\n            const scale = Math.min(scaleX, scaleY);\n\n            // 性能优化：使用Web Animations API\n            const animation = clone.animate([\n                {\n                    transform: 'translate(0px, 0px) scale(1)',\n                    opacity: 1,\n                    borderRadius: '8px'\n                },\n                {\n                    transform: `translate(${deltaX}px, ${deltaY}px) scale(${scale})`,\n                    opacity: 0.3,\n                    borderRadius: '50%'\n                }\n            ], {\n                duration: 400,\n                easing: 'cubic-bezier(0.73, 0.06, 0.34, 1.02)',\n                fill: 'forwards'\n            });\n\n            animation.onfinish = () => {\n                // 清理克隆元素\n                if (clone.parentNode) {\n                    document.body.removeChild(clone);\n                }\n\n                // 重置面板状态\n                requestAnimationFrame(() => {\n                    UI.panel.style.opacity = '0';\n                    UI.panel.style.transform = 'scale(0.3) translateY(50px)';\n\n                    // 按钮反馈动画\n                    button.animate([\n                        { transform: 'scale(1.2)' },\n                        { transform: 'scale(1)' }\n                    ], {\n                        duration: 150,\n                        easing: 'ease-out'\n                    });\n                });\n\n                UI.clearDOMCache(); // 清除缓存\n            };\n        });\n    },\n\n    // 性能优化：优化余额获取，添加缓存和错误处理\n    fetchAndShowBalance: (() => {\n        let balanceCache = null;\n        let lastFetchTime = 0;\n        const CACHE_DURATION = 30000; // 30秒缓存\n        let isFetching = false;\n\n        return async () => {\n            const now = Date.now();\n\n            // 如果正在获取或缓存有效，则返回\n            if (isFetching || (balanceCache && (now - lastFetchTime) < CACHE_DURATION)) {\n                if (balanceCache) {\n                    UI.userBalance = balanceCache;\n                    UI.updateBalanceDisplay();\n                }\n                return;\n            }\n\n            isFetching = true;\n\n            try {\n                const config = _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get();\n                const balance = await _api_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fetchUserBalance(config);\n\n                if (balance) {\n                    balanceCache = balance;\n                    lastFetchTime = now;\n                    UI.userBalance = balance;\n\n                    // 性能优化：使用requestAnimationFrame更新UI\n                    requestAnimationFrame(() => {\n                        UI.updateBalanceDisplay();\n                    });\n                }\n            } catch (error) {\n                console.error('获取余额失败:', error);\n\n                // 性能优化：显示用户友好的错误提示\n                requestAnimationFrame(() => {\n                    UI.showNotification('获取余额失败，请检查网络连接', 'error');\n                });\n            } finally {\n                isFetching = false;\n            }\n        };\n    })(),\n\n    // 性能优化：优化余额显示更新\n    updateBalanceDisplay: () => {\n        // 使用缓存查询减少DOM操作\n        const balanceElement = UI.getCachedElement('#balanceInfo');\n        const tokenElement = UI.getCachedElement('#tokenUsage');\n\n        // 批量更新DOM\n        requestAnimationFrame(() => {\n            if (balanceElement && UI.userBalance) {\n                balanceElement.textContent = `余额: ${UI.userBalance.total_balance} ${UI.userBalance.currency}`;\n                balanceElement.style.color = '#52c41a';\n            }\n\n            if (tokenElement && UI.lastTokenUsage) {\n                tokenElement.textContent = `本次回答使用的Token: ${UI.lastTokenUsage.prompt_tokens}+${UI.lastTokenUsage.completion_tokens}=${UI.lastTokenUsage.total_tokens}`;\n            }\n        });\n    },\n\n    // 性能优化：添加清理方法\n    cleanup: () => {\n        // 清除所有定时器\n        if (UI._notificationTimer) {\n            clearTimeout(UI._notificationTimer);\n            UI._notificationTimer = null;\n        }\n\n        if (UI._animationFrameId) {\n            cancelAnimationFrame(UI._animationFrameId);\n            UI._animationFrameId = null;\n        }\n\n        // 清除DOM缓存\n        UI.clearDOMCache();\n\n        // 重置滚动条宽度缓存\n        UI._scrollBarWidth = null;\n    }\n};\n\n// 性能优化：添加窗口大小变化监听（防抖）- 移到UI对象定义后\nUI.handleResize = debounce(() => {\n    // 重置滚动条宽度缓存\n    UI._scrollBarWidth = null;\n    UI.clearDOMCache();\n}, 250);\n\n// 性能优化：监听窗口大小变化\nif (typeof window !== 'undefined') {\n    window.addEventListener('resize', UI.handleResize, { passive: true });\n\n    // 页面卸载时清理资源\n    window.addEventListener('beforeunload', UI.cleanup, { passive: true });\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UI);\n\n\n//# sourceURL=webpack://tm/./src/ui.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst Utils = {\n    formatDate: (date) => date.toISOString().split('T')[0],\n\n    formatTime: (time) => {\n        const date = new Date(time);\n        return date.toLocaleString('zh-CN');\n    },\n\n    getDateRange: (offset = 0) => {\n        const today = new Date();\n        const startOfWeek = new Date(today);\n        startOfWeek.setDate(today.getDate() - today.getDay() + 1 + offset * 7);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n        return [Utils.formatDate(startOfWeek), Utils.formatDate(endOfWeek)];\n    },\n\n    getThisWeekRange: () => Utils.getDateRange(0),\n\n    getLastWeekRange: () => Utils.getDateRange(-1),\n\n    getThisMonthRange: () => {\n        const today = new Date();\n        const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\n        const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n        return [Utils.formatDate(startOfMonth), Utils.formatDate(endOfMonth)];\n    },\n\n    getLastMonthRange: () => {\n        const today = new Date();\n        const startOfLastMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);\n        const endOfLastMonth = new Date(today.getFullYear(), today.getMonth(), 0);\n        return [Utils.formatDate(startOfLastMonth), Utils.formatDate(endOfLastMonth)];\n    },\n\n    validateTokenInput: (input, showNotification) => {\n        if (!input) {return;}\n\n        input.addEventListener('input', (e) => {\n            const value = parseInt(e.target.value, 10);\n            if (Number.isNaN(value) || value < 100) {\n                e.target.value = '100';\n            } else if (value > 2000) {\n                e.target.value = '2000';\n                if (showNotification) {\n                    showNotification('Token数量不能超过2000', 'warning');\n                }\n            }\n        });\n\n        input.addEventListener('blur', (e) => {\n            const value = parseInt(e.target.value, 10);\n            if (Number.isNaN(value) || value < 100) {\n                e.target.value = '100';\n            } else if (value > 2000) {\n                e.target.value = '2000';\n            }\n        });\n\n        input.addEventListener('keydown', (e) => {\n            if (e.key === 'Enter') {\n                const value = parseInt(e.target.value, 10);\n                if (Number.isNaN(value) || value < 100) {\n                    e.target.value = '100';\n                } else if (value > 2000) {\n                    e.target.value = '2000';\n                }\n            }\n        });\n    },\n\n    validateConfig: (config) => {\n        const errors = [];\n\n        if (!config.ACCESS_TOKEN.trim()) {\n            errors.push('GitLab Access Token 未配置');\n        }\n\n        if (!config.DEEPSEEK_API_KEY.trim()) {\n            errors.push('DeepSeek API Key 未配置');\n        }\n\n        if (!config.GITLAB_URL.trim()) {\n            errors.push('GitLab API URL 未配置');\n        }\n\n        if (!config.DEEPSEEK_BASE_URL.trim()) {\n            errors.push('DeepSeek API URL 未配置');\n        }\n\n        return errors;\n    },\n\n    exportToCsv: (data, startDate, endDate) => {\n        const csvContent = [\n            ['序号', '时间', '提交内容'].join(','),\n            ...data.map((event, index) => [\n                index + 1,\n                Utils.formatTime(event.created_at),\n                `\"${(event.target_title || '').replace(/\"/g, '\"\"')}\"`\n            ].join(','))\n        ].join('\\n');\n\n        const blob = new Blob([`\\ufeff${csvContent}`], { type: 'text/csv;charset=utf-8;' });\n        const link = document.createElement('a');\n        if (window.URL && window.URL.createObjectURL) {\n            link.href = window.URL.createObjectURL(blob);\n            const fileName = `GitLab提交记录_${startDate}_${endDate}.csv`;\n            link.download = fileName;\n            link.click();\n            return true;\n        }\n        return false;\n    },\n\n    detectSystemTheme: () => {\n        if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n            return 'dark';\n        }\n        return 'light';\n    }\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Utils);\n\n\n//# sourceURL=webpack://tm/./src/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;